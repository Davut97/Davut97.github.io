{"ast":null,"code":"var _jsxFileName = \"/home/aydin/projects/my-portfolio/src/Components/terminal/myTerminal.jsx\";\nimport React, { use } from 'react';\nimport ReactConsole from 'react-console';\n\nconst MyTerminal = () => {\n  const [history, setHistory] = useState(['echo hello world', 'sleep 1000', 'sleep 2000', 'sleep 3000', 'echo ola', 'not found']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactConsole, {\n    autoFocus: true,\n    welcomeMessage: \"Welcome\",\n    commands: {\n      history: {\n        description: 'History',\n        fn: () => new Promise(resolve => {\n          resolve(`${history.join('\\r\\n')}`);\n        })\n      },\n      echo: {\n        description: 'Echo',\n        fn: (...args) => {\n          return new Promise((resolve, reject) => {\n            setTimeout(() => {\n              resolve(`${args.join(' ')}`);\n            }, 2000);\n          });\n        }\n      },\n      test: {\n        description: 'Test',\n        fn: (...args) => {\n          return new Promise((resolve, reject) => {\n            setTimeout(() => {\n              resolve('Hello world \\n\\n hello \\n');\n            }, 2000);\n          });\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MyTerminal;","map":{"version":3,"sources":["/home/aydin/projects/my-portfolio/src/Components/terminal/myTerminal.jsx"],"names":["React","use","ReactConsole","MyTerminal","history","setHistory","useState","description","fn","Promise","resolve","join","echo","args","reject","setTimeout","test"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,GAAd,QAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,CACrC,kBADqC,EAErC,YAFqC,EAGrC,YAHqC,EAIrC,YAJqC,EAKrC,UALqC,EAMrC,WANqC,CAAD,CAAtC;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,cAAc,EAAC,SAFjB;AAGE,IAAA,QAAQ,EAAE;AACRF,MAAAA,OAAO,EAAE;AACPG,QAAAA,WAAW,EAAE,SADN;AAEPC,QAAAA,EAAE,EAAE,MACF,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBA,UAAAA,OAAO,CAAE,GAAEN,OAAO,CAACO,IAAR,CAAa,MAAb,CAAqB,EAAzB,CAAP;AACD,SAFD;AAHK,OADD;AAQRC,MAAAA,IAAI,EAAE;AACJL,QAAAA,WAAW,EAAE,MADT;AAEJC,QAAAA,EAAE,EAAE,CAAC,GAAGK,IAAJ,KAAa;AACf,iBAAO,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUI,MAAV,KAAqB;AACtCC,YAAAA,UAAU,CAAC,MAAM;AACfL,cAAAA,OAAO,CAAE,GAAEG,IAAI,CAACF,IAAL,CAAU,GAAV,CAAe,EAAnB,CAAP;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WAJM,CAAP;AAKD;AARG,OARE;AAkBRK,MAAAA,IAAI,EAAE;AACJT,QAAAA,WAAW,EAAE,MADT;AAEJC,QAAAA,EAAE,EAAE,CAAC,GAAGK,IAAJ,KAAa;AACf,iBAAO,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUI,MAAV,KAAqB;AACtCC,YAAAA,UAAU,CAAC,MAAM;AACfL,cAAAA,OAAO,CAAC,2BAAD,CAAP;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WAJM,CAAP;AAKD;AARG;AAlBE,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAqCD,CA/CD;;AAgDA,eAAeP,UAAf","sourcesContent":["import React,{use}from 'react';\nimport ReactConsole from 'react-console';\n\nconst MyTerminal = () => {\n  const [history, setHistory] = useState([\n    'echo hello world',\n    'sleep 1000',\n    'sleep 2000',\n    'sleep 3000',\n    'echo ola',\n    'not found',\n  ]);\n\n  return (\n    <div>\n      <ReactConsole\n        autoFocus\n        welcomeMessage=\"Welcome\"\n        commands={{\n          history: {\n            description: 'History',\n            fn: () =>\n              new Promise((resolve) => {\n                resolve(`${history.join('\\r\\n')}`);\n              }),\n          },\n          echo: {\n            description: 'Echo',\n            fn: (...args) => {\n              return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  resolve(`${args.join(' ')}`);\n                }, 2000);\n              });\n            },\n          },\n          test: {\n            description: 'Test',\n            fn: (...args) => {\n              return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  resolve('Hello world \\n\\n hello \\n');\n                }, 2000);\n              });\n            },\n          },\n        }}\n      />\n    </div>\n  );\n};\nexport default MyTerminal;\n"]},"metadata":{},"sourceType":"module"}