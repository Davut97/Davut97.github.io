{"ast":null,"code":"var _jsxFileName = \"/home/aydin/projects/my-portfolio/src/Components/Home/NameReveal.js\";\nimport React, { Component } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport device from '../../Assets/Responsive/breakpoint';\nconst Stage = styled.div`\n    position: relative;\n    /* border:1px solid black; */\n    z-index: 1;\n    width: 100%;\n`;\n\nconst moveUp = init => keyframes`\n0%{\n    transform: translateY(${init}px);\n}\n100%{\n    transform: translateY(0px);\n}\n`;\n\nconst hideWhiteBlocks = () => keyframes`\n0%{\n    opacity: 1;\n    height: 35vh;\n}\n100%{\n    opacity: 0;\n    height: 0vh;\n}\n`;\n\nconst TextToReveal = styled.div`\n    font-family: ${props => props.fontFam};\n    text-align: center;\n    @media ${device.tablet} {\n        font-size: 100px;\n        animation: ${props => props.reveal ? moveUp(100) : 'none'} 1s\n            cubic-bezier(0, 0.1, 0.12, 0.99) forwards;\n        transform: translateY(${100 * 1.4}px);\n    }\n    @media ${device.laptop} {\n        font-size: 140px;\n        animation: ${props => props.reveal ? moveUp(140) : 'none'} 1s\n            cubic-bezier(0, 0.1, 0.12, 0.99) forwards;\n        transform: translateY(${140 * 1.4}px);\n    }\n    @media ${device.laptopL} {\n        font-size: 150px;\n        animation: ${props => props.reveal ? moveUp(150) : 'none'} 1s\n            cubic-bezier(0, 0.1, 0.12, 0.99) forwards;\n        transform: translateY(${150 * 1.4}px);\n    }\n    @media ${device.desktop} {\n        font-size: 200px;\n        animation: ${props => props.reveal ? moveUp(200) : 'none'} 1s\n            cubic-bezier(0, 0.1, 0.12, 0.99) forwards;\n        transform: translateY(${200 * 1.4}px);\n    }\n`;\nconst WhiteBlock = styled.div`\n    position: absolute;\n    background-color: white;\n    margin-right: 100%;\n    width: 120%;\n    height: 35vh;\n    animation: ${hideWhiteBlocks} 0.5s linear forwards;\n    animation-delay: 2s;\n    /* border: 1px solid grey; */\n`;\n\nclass NameReveal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reveal: false\n    };\n    this.revealText = this.revealText.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      timeDelay\n    } = this.props;\n    this.revealText(timeDelay);\n  }\n\n  revealText(timeout) {\n    setTimeout(() => {\n      this.setState({\n        reveal: true\n      });\n    }, timeout);\n  }\n\n  render() {\n    const {\n      text,\n      fontFam\n    } = this.props;\n    const {\n      reveal\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Stage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextToReveal, {\n      fontFam: fontFam,\n      reveal: reveal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, text), /*#__PURE__*/React.createElement(WhiteBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nNameReveal.propTypes = {\n  text: PropTypes.string.isRequired,\n  fontFam: PropTypes.string,\n  timeDelay: PropTypes.number.isRequired\n};\nNameReveal.defaultProps = {\n  fontFam: 'Avenir Helvetica Ariel'\n};\nexport default NameReveal;","map":{"version":3,"sources":["/home/aydin/projects/my-portfolio/src/Components/Home/NameReveal.js"],"names":["React","Component","styled","keyframes","PropTypes","device","Stage","div","moveUp","init","hideWhiteBlocks","TextToReveal","props","fontFam","tablet","reveal","laptop","laptopL","desktop","WhiteBlock","NameReveal","constructor","state","revealText","bind","componentDidMount","timeDelay","timeout","setTimeout","setState","render","text","propTypes","string","isRequired","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport device from '../../Assets/Responsive/breakpoint';\n\nconst Stage = styled.div`\n    position: relative;\n    /* border:1px solid black; */\n    z-index: 1;\n    width: 100%;\n`;\n\nconst moveUp = (init) => keyframes`\n0%{\n    transform: translateY(${init}px);\n}\n100%{\n    transform: translateY(0px);\n}\n`;\n\nconst hideWhiteBlocks = () => keyframes`\n0%{\n    opacity: 1;\n    height: 35vh;\n}\n100%{\n    opacity: 0;\n    height: 0vh;\n}\n`;\n\nconst TextToReveal = styled.div`\n    font-family: ${(props) => props.fontFam};\n    text-align: center;\n    @media ${device.tablet} {\n        font-size: 100px;\n        animation: ${(props) => (props.reveal ? moveUp(100) : 'none')} 1s\n            cubic-bezier(0, 0.1, 0.12, 0.99) forwards;\n        transform: translateY(${100 * 1.4}px);\n    }\n    @media ${device.laptop} {\n        font-size: 140px;\n        animation: ${(props) => (props.reveal ? moveUp(140) : 'none')} 1s\n            cubic-bezier(0, 0.1, 0.12, 0.99) forwards;\n        transform: translateY(${140 * 1.4}px);\n    }\n    @media ${device.laptopL} {\n        font-size: 150px;\n        animation: ${(props) => (props.reveal ? moveUp(150) : 'none')} 1s\n            cubic-bezier(0, 0.1, 0.12, 0.99) forwards;\n        transform: translateY(${150 * 1.4}px);\n    }\n    @media ${device.desktop} {\n        font-size: 200px;\n        animation: ${(props) => (props.reveal ? moveUp(200) : 'none')} 1s\n            cubic-bezier(0, 0.1, 0.12, 0.99) forwards;\n        transform: translateY(${200 * 1.4}px);\n    }\n`;\n\nconst WhiteBlock = styled.div`\n    position: absolute;\n    background-color: white;\n    margin-right: 100%;\n    width: 120%;\n    height: 35vh;\n    animation: ${hideWhiteBlocks} 0.5s linear forwards;\n    animation-delay: 2s;\n    /* border: 1px solid grey; */\n`;\n\nclass NameReveal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reveal: false,\n        };\n        this.revealText = this.revealText.bind(this);\n    }\n\n    componentDidMount() {\n        const { timeDelay } = this.props;\n        this.revealText(timeDelay);\n    }\n\n    revealText(timeout) {\n        setTimeout(() => {\n            this.setState({ reveal: true });\n        }, timeout);\n    }\n\n    render() {\n        const { text, fontFam } = this.props;\n        const { reveal } = this.state;\n        return (\n            <Stage>\n                <TextToReveal fontFam={fontFam} reveal={reveal}>\n                    {text}\n                </TextToReveal>\n                <WhiteBlock />\n            </Stage>\n        );\n    }\n}\n\nNameReveal.propTypes = {\n    text: PropTypes.string.isRequired,\n    fontFam: PropTypes.string,\n    timeDelay: PropTypes.number.isRequired,\n};\n\nNameReveal.defaultProps = {\n    fontFam: 'Avenir Helvetica Ariel',\n};\nexport default NameReveal;\n"]},"metadata":{},"sourceType":"module"}